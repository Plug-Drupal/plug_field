<?php
/**
 * @file
 * Module implementation File.
 */

use \Drupal\plug_formatter\PlugFormatterManager;

/**
 * Implements hook_field_formatter_info().
 */
function plug_formatter_field_formatter_info() {
  return PlugFormatterManager::create()->getDefinitions();
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function plug_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  if ($plugin = PlugFormatterManager::create()->createInstance($display['type'])) {
    return $plugin->settingsForm($field, $instance, $view_mode, $form, $form_state);
  }
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function plug_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $summary = array();

  if ($plugin = PlugFormatterManager::create()->createInstance($display['type'])) {
    $summary = $plugin->settingsSummary($field, $instance, $view_mode);
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function plug_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  if ($plugin = PlugFormatterManager::create()->createInstance($display['type'])) {
    return $plugin->viewElements($entity_type, $entity, $field, $instance, $langcode, $items, $display);
  }

  return array();
}
